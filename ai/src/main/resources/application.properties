# HTTP SERVER
quarkus.http.port=8082
quarkus.http.cors=true

# IMAGGA API
api.key=acc_33afef33b3732a2
api.secret=0a723767233c0586613ef549c5ed2882
api.auth=Basic YWNjXzMzYWZlZjMzYjM3MzJhMjowYTcyMzc2NzIzM2MwNTg2NjEzZWY1NDljNWVkMjg4Mg==

# KAFKA CONSUMER
mp.messaging.incoming.classification-request.connector=smallrye-kafka
mp.messaging.incoming.classification-request.topic=classification-request
#mp.messaging.incoming.classification-request.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.classification-request.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.classification-request.group.id=classification-request-consumer-group-test
mp.messaging.incoming.classification-request.reconnect.backoff.ms=30000
mp.messaging.incoming.classification-request.auto.offset.reset=earliest
#mp.messaging.incoming.classification-request.enable.auto.commit=true

# KAFKA PRODUCER
%dev.mp.messaging.outgoing.classification-reply.bootstrap.servers=localhost:9092
mp.messaging.outgoing.classification-reply.bootstrap.servers=kafka:9092
mp.messaging.outgoing.classification-reply.connector=smallrye-kafka
mp.messaging.outgoing.classification-reply.topic=classification-reply
mp.messaging.outgoing.classification-reply.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.classification-reply.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.classification-reply.client.id=classification-reply-producer
mp.messaging.outgoing.classification-reply.reconnect.backoff.ms=30000
mp.messaging.outgoing.classification-reply.enable.idempotence=true
mp.messaging.outgoing.classification-reply.acks=all
mp.messaging.outgoing.classification-reply.batch.size=16384
mp.messaging.outgoing.classification-reply.linger.ms=1
mp.messaging.outgoing.classification-reply.buffer.memory=33554432
# HTTP SERVER
quarkus.http.port=8081
quarkus.http.test-port=8081
quarkus.http.cors=true

# DATABASE
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/quarkus-hackaton
quarkus.datasource.jdbc.url=jdbc:postgresql://quarkus-hackaton-be-db/quarkus-hackaton
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.database.generation=drop-and-create

# OUTBOX
quarkus.debezium-outbox.table-name=outbox
quarkus.debezium-outbox.aggregate-id.name=aggregate_id
quarkus.debezium-outbox.aggregate-type.name=aggregate_type
quarkus.debezium-outbox.remove-after-insert=false

# S3
bucket.name=quarkus-hackaton
quarkus.s3.aws.region=eu-west-1
%dev.quarkus.s3.aws.credentials.type=system-property
quarkus.s3.aws.credentials.type=env-variable

# KAFKA
%dev.kafka.bootstrap.servers=localhost:9092
kafka.bootstrap.servers=quarkus-hackaton-kafka:9092

# KAFKA CONSUMER
mp.messaging.incoming.classification-reply.connector=smallrye-kafka
mp.messaging.incoming.classification-reply.topic=classification-reply
mp.messaging.incoming.classification-reply.value.deserializer=org.example.be.model.event.reply.ClassificationReplyEventDeserializer
mp.messaging.incoming.classification-reply.group.id=classification-reply-consumer-group
mp.messaging.incoming.classification-reply.reconnect.backoff.ms=30000
mp.messaging.incoming.classification-reply.auto.offset.reset=earliest
mp.messaging.incoming.classification-reply.enable.auto.commit=true

# OPEN API
quarkus.smallrye-openapi.path=/open-api
quarkus.swagger-ui.path=/swagger-ui
quarkus.swagger-ui.always-include=true

# OPEN METRICS
quarkus.jaeger.service-name=quarkus-hackaton-be-app
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
# https://debezium.io/docs/connectors/postgresql/
# Unique name for the source connector
name=be-source-connector
# The name of the Java class for the connector
connector.class=io.debezium.connector.postgresql.PostgresConnector
# The maximum number of tasks that should be created for this connector
tasks.max=1
# The name of the Postgres logical decoding slot created for streaming changes from a plugin and database instance
slot.name=be
# IP address or hostname of the PostgreSQL database server
database.hostname=quarkus-hackaton-be-db
# Integer port number of the PostgreSQL database server
database.port=5432
# Name of the PostgreSQL database to use when connecting to the PostgreSQL database server
database.user=postgres
# Password to use when connecting to the PostgreSQL database server
database.password=postgres
# The name of the PostgreSQL database from which to stream the changes
database.dbname=quarkus-hackaton
# Logical name that identifies and provides a namespace for the particular PostgreSQL database server/cluster being monitored
database.server.name=be
# An optional comma-separated list of regular expressions that match schema names to be monitored
schema.whitelist=public
# An optional comma-separated list of regular expressions that match fully-qualified table identifiers for tables to be monitored
table.whitelist=public.outbox
# Controls whether a tombstone event should be generated after a delete event
tombstones.on.delete=false
# https://docs.confluent.io/current/connect/transforms/index.html
# https://debezium.io/documentation/reference/configuration/outbox-event-router
transforms=outbox
# SMT that provides out-of-the-box support for the Outbox Pattern
transforms.outbox.type=io.debezium.transforms.outbox.EventRouter
# The name of the topic in which the events will be routed
transforms.outbox.route.topic.replacement=classification-request
# Override Kafka message timestamp with a value from a chosen field
transforms.outbox.table.field.event.timestamp=timestamp
# Extra fields can be added as part of the event envelope or as message header
transforms.outbox.table.fields.additional.placement=type:header:eventType
# The column which contains the event key within the outbox table
transforms.outbox.table.field.event.key=aggregate_id
# The column which contains the payload ID within the outbox table
transforms.outbox.table.field.event.payload.id=aggregate_id
# The column which determines how the events can be routed
transforms.outbox.route.by.field=aggregate_type